void lcd_busy(void)
{
	
	_delay_ms(50);

}

void lcd_command (unsigned char cmd)
{
	
	lcd_busy();
	
	PORTA = cmd;
	PORTB &= 0x06;
	PORTB &= 0x05;
	PORTB |= 0x04;
	PORTB &= 0x03;
	_delay_us(1);
	
}

void lcd_init()
{
	
	
	DDRA = 0xff;
	DDRB = DDRB | 0x0f;
	
	_delay_ms(15);
	
	PORTA = 0x30;
	PORTB &= 0x00;
	_delay_us(4100);
	PORTB &= 0x00;
	_delay_us(100);
	PORTB &= 0x00;
	
	lcd_command(0x38);
	lcd_command(0x08);
	lcd_command(0x01);
	lcd_command(0x06);
	
	lcd_command(0x0f);
}

void lcd_data(unsigned char byte)
{
	
	lcd_busy();
	
	PORTB |= 0x01;
	PORTB &= 0x05;
	PORTB |= 0x04;
	_delay_us(50);
	PORTA = byte;
	_delay_us(50);
	PORTB &= 0x03;
	
}

void lcd_string(char *str)
{
	int i = 0;
	while(1)
	{
		
		if(str[i] == '\0')
		break;
		lcd_data(str[i++]);
	}
}

void lcd_display_clear()
{
	
	lcd_command(0x01);
}

void lcd_cursor_home()
{
	lcd_command(0x02);
}

void lcd_entry_mode(int ID, int S)
{

	unsigned char cmd;
	
	cmd = 0x04;
	if (ID == 1)
	cmd = cmd | 0x02;
	if (S == 1)
	cmd = cmd | 0x01;
	lcd_command(cmd);
}

void lcd_display_OnOff(int D, int C, int B)
{
	unsigned cmd;
	
	cmd = 0x08;
	if (D == 1)
	cmd = cmd | 0x04;
	if (C == 1)
	cmd = cmd | 0x02;
	if (B == 1)
	cmd = cmd | 0x01;
	lcd_command(cmd);
}

void lcd_cursordisplay_shift(int SC, int RL)
{
	
	unsigned cmd;
	
	cmd = 0x10;
	if (SC == 1)
	cmd = cmd | 0x08;
	if (RL == 1)
	cmd = cmd | 0x04;
	lcd_command(cmd);
}

void lcd_display_position(unsigned char row, unsigned char col)
{
	unsigned cmd;
	
	cmd = 0x80 | ((row-1)*0x40+(col-1));
	lcd_command(cmd);
	
}